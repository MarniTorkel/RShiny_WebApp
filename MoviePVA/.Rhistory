#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
scale_colour_gradient(low = "lightgrey", high = "black") +
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
scale_colour_gradient(low = "grey", high = "black") +
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
scale_colour_gradient(low = "grey", high = "darkgrey") +
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
scale_colour_gradient(low = "darkgrey", high = "black") +
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = "darkblue")) + #scale_edge_alpha(guide="None") +
#scale_colour_gradient(low = "darkgrey", high = "black") +
geom_text(aes(label=Name),hjust=0, vjust=0)
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
#scale_colour_gradient(low = "darkgrey", high = "black") +
geom_text(aes(label=Name),hjust=0, vjust=0)
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
#scale_colour_gradient(low = "darkgrey", high = "black") +
geom_text(aes(label=name),hjust=0, vjust=0)
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
#scale_colour_gradient(low = "darkgrey", high = "black") +
geom_text(aes(label=name),hjust=0, vjust=0) +
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
#scale_colour_gradient(low = "darkgrey", high = "black") +
#geom_text(aes(label=name),hjust=0, vjust=0) +
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
scale_colour_gradient(low = "grey40", high = "grey0") +
#geom_text(aes(label=name),hjust=0, vjust=0) +
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
scale_colour_gradient(low = "grey40", high = "grey10") +
#geom_text(aes(label=name),hjust=0, vjust=0) +
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
genres_data <- subset(imdb_data, imdb_data$title_year >= movie_years()[1] &
imdb_data$title_year <= movie_years()[2])
p <- ggraph(graph, layout="kk") +
geom_edge_link(aes(colour=factor(range))) +
#geom_edge_fan(aes(colour=factor(range)))
geom_node_point(aes(size = degree, colour = col)) + #scale_edge_alpha(guide="None") +
scale_colour_gradient(low = "grey40", high = "grey0") +
#geom_text(aes(label=name),hjust=0, vjust=0) +
#geom_node_point() +
theme_graph()
p + facet_edges( ~range, ncol = 2)
movie_years <- c(1999, 2010)
genres_data <- subset(imdb_data, imdb_data$title_year >= movie_years[1] &
imdb_data$title_year <= movie_years[2])
genres_title <- data.frame(genres_data$movie_title, genres_data$genres)
colnames(genres_title) <- c("titler", "genres")
View(genres_title)
genres_split <- strsplit(as.character(genres_title$genres), split="\\|")
genres_title_split <- data.frame(title = rep(genres_title$title, sapply(genres_split, length)), genre = unlist(genres_split), stringsAsFactors = FALSE)
genre_gross <- data.frame(gross=genres_data[match(genres_title_split $title, genres_data$movie_title), 9])
gtg <- as.data.frame(c(genres_title_split[,c(1,2)], genre_gross), stringsAsFactors = FALSE)
gtg <- gtg[ order(-gtg[,3]), ]
rownames(gtg) <- NULL
View(gtg)
i <- which(!duplicated(gtg[,1],fromLast=T))
View(genre_gross)
View(genres_title_split)
top20_gtg <- gtg[c(1:i[20]),]
View(top20_gtg)
two_mode_nodes <- unique(data.frame(id = c(as.matrix(top20_gtg[,1:2]))))
View(two_mode_nodes)
two_mode_nodes$id <- as.character(two_mode_nodes$id)
two_mode_nodes$type <- ifelse(two_mode_nodes[,1] %in%  genreList, 1, NA)
genreList <- unique(genres_title_split$genre)
two_mode_nodes$type <- ifelse(two_mode_nodes[,1] %in%  genreList, 1, NA)
two_mode_nodes <- two_mode_nodes[ order(-two_mode_nodes[,2], two_mode_nodes[,1]),]
rownames(two_mode_nodes) <- NULL
View(two_mode_nodes)
tm_links <- top20_gtg[,c(2,1)]
View(top20_gtg)
gg_links <- cbind(tm_links, type=rep("genres", nrow(tm_links)))
View(gg_links)
m <- as.matrix(table(tm_links))
M <- m[, colnames(m) %in% unique(top20_gtg[,1])]
two_mode_links <- rbind(M)
View(two_mode_links)
net2 <- graph_from_incidence_matrix(two_mode_links)
table(V(net2)$type)
#plot(net2, vertex.label=NA)
# Genres are blue squares, movie nodes are orange circles:
V(net2)$color <- c("steel blue", "orange")[V(net2)$type+1]
V(net2)$shape <- c("square", "circle")[V(net2)$type+1]
# Genres will have name labels, movie nodes  will not:
V(net2)$label <- ""
V(net2)$label[V(net2)$type==F] <- two_mode_nodes$id[V(net2)$type==F]
#V(net2)$label[V(net2)$type==T] <- two_mode_nodes$id[V(net2)$type==T]
V(net2)$label.cex=0.6
V(net2)$label.font=1.5
#l <- layout_with_kk(net2)
e <- edgebundle(net2,tension = 0.1,fontsize = 20)
e
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
?visLayout
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
class(two_mode_links)
edgebundle(two_mode_links,tension = 0.1,fontsize = 20)
ggraph(net2, 'dendogram', circular=TRUE) +
geom_edge_bundle(aes(color = ..index..), data = gCon(from,to), edge_alpha = 0.25) +
scale_edge_colour_distiller("", direction=1, guide="edge_direction") +
coord_fixed() +
ggforce::theme_no_axes()
ggraph(net2, 'dendrogram', circular=TRUE) +
geom_edge_bundle(aes(color = ..index..), data = gCon(from,to), edge_alpha = 0.25) +
scale_edge_colour_distiller("", direction=1, guide="edge_direction") +
coord_fixed() +
ggforce::theme_no_axes()
ggraph(net2, 'dendrogram', circular=TRUE) +
geom_edge_bundle(aes(color = ..index..), data = gCon(from,to), edge_alpha = 0.25) +
#scale_edge_colour_distiller("", direction=1, guide="edge_direction") +
coord_fixed() +
ggforce::theme_no_axes()
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
install.packages('maps')
install.packages('geosphere')
library('maps')
library('geosphere')
map("county", col="palegreen",  border="gray10", fill=TRUE, bg="gray30")
map("world", col="palegreen",  border="gray10", fill=TRUE, bg="gray30")
map("world", border="gray10", fill=TRUE, bg="lightblue", ylim=c(-60,90), mar=c(0,0,0,0))
map("world", col="palegreen", border="gray10", fill=TRUE, bg="lightblue", ylim=c(-60,90), mar=c(0,0,0,0))
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
install.packages("ggmap")
library(ggmap)
geocode(USA)
View(imdb_data)
geocode(UK)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
dir_rev <- data.frame(imdb_data$director_name, round(imdb_data$gross/1000000,0))
dir_rev <- unique(dir_rev[order(-dir_rev[,2]),])
colnames(dir_rev) <- c("Director", "Gross(m)")
rownames(dir_rev) <- NULL
top_dir <- dir_rev[1:50,]
View(top_dir)
top_50_dir <- dir_rev[1:50,]
View(top_50_dir)
top_50_agg_dir <- aggregate(Director ~ ., top_50_dir)
top_50_agg_dir <- aggregate(Director ~ ., top_50_dir, sum)
top_50_agg_dir <- aggregate(Director ~ ., top_50_dir, FUN=sum)
?aggregate
top_50_agg_dir <- aggregate(Director ~ ., top_50_dir, mean)
View(top_50_agg_dir)
top_50_agg_dir <- aggregate(Gross(m) ~ ., top_50_dir, sum)
dir_rev <- data.frame(imdb_data$director_name, round(imdb_data$gross/1000000,0))
dir_rev <- unique(dir_rev[order(-dir_rev[,2]),])
colnames(dir_rev) <- c("Director", "Gross")
rownames(dir_rev) <- NULL
top_50_dir <- dir_rev[1:50,]
top_50_agg_dir <- aggregate(Gross ~ ., top_50_dir, sum)
View(top_50_agg_dir)
top_50_agg_dir <- aggregate(Gross ~ ., top_50_dir, mean)
top_20_dir <- dir_rev[1:20,]
top_20_agg_dir <- aggregate(Gross ~ ., top_20_dir, mean)
View(top_20_agg_dir)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
dir_revenue <- data.frame(imdb_data$director_name, imdb_data$gross/1000000)
colnames(dir_revenue) <- c("director", "revenue")
#dir_agg <- aggregate(revenue ~ director, dir_revenue, sum)
top_20_dir <- dir_revenue[1:20,]
top_20_agg_dir <- aggregate(revenue ~ ., top_20_dir, mean)
rownames(top_20_agg_dir) <- NULL
top_20_agg_dir <- unique(top_20_agg_dir[order(-top_20_agg_dir[,2]),])
catDat <- data.frame(top_20_agg_dir)
View(catDat)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
top_20_dir <- dir_revenue[1:20,]
top_20_agg_dir <- aggregate(revenue ~ ., top_20_dir, mean)
rownames(top_20_agg_dir) <- NULL
top_20_agg_dir <- unique(top_20_agg_dir[order(-top_20_agg_dir[,2]),])
View(top_20_agg_dir)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
title_revenue <- data.frame(imdb_data$movie_title, imdb_data$gross/1000000)
catDat <- data.frame(title_revenue[order(-title_revenue[,2]),])
View(title_revenue)
title_revenue <- data.frame(imdb_data$movie_title, imdb_data$gross/1000000)
title_rev <- data.frame(title_revenue[order(-title_revenue[,2]),])
catDat <- title_rev[1:50,]
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
View(dir_rev)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
chordNetwork(net2)
chordNetwork(two_mode_links)
View(two_mode_links)
ggraph(net2, 'dendrogram', circular=TRUE)
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "white"), vertex.size=(2-V(net2)$type)*10, vertex.label.degree=pi/2,
layout=l[,c(2,1)], type="radial")
l <- layout_in_circle(net2)
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "white"), vertex.size=(2-V(net2)$type)*10, vertex.label.degree=pi/2,
layout=l[,c(2,1)], type="radial")
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "white"), vertex.size=(2-V(net2)$type)*10, vertex.label.degree=pi/2,
type="radial")
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
View(two_mode_nodes)
View(two_mode_links)
View(gtg)
View(top20_gtg)
two_mode_nodes <- unique(data.frame(id = c(as.matrix(top20_gtg[,1:3]))))
two_mode_nodes$id <- as.character(two_mode_nodes$id)
genreList <- unique(genres_title_split$genre)
two_mode_nodes$type <- ifelse(two_mode_nodes[,1] %in%  genreList, 1, NA)
two_mode_nodes <- two_mode_nodes[ order(-two_mode_nodes[,2], two_mode_nodes[,1]),]
rownames(two_mode_nodes) <- NULL
View(two_mode_nodes)
two_mode_nodes <- unique(data.frame(id = c(as.matrix(top20_gtg[,1:3]))))
View(two_mode_nodes)
two_mode_nodes <- unique(data.frame(id = c(as.matrix(top20_gtg[,1:2]))))
two_mode_nodes$id <- as.character(two_mode_nodes$id)
genreList <- unique(genres_title_split$genre)
two_mode_nodes$type <- ifelse(two_mode_nodes[,1] %in%  genreList, 1, NA)
two_mode_nodes <- two_mode_nodes[ order(-two_mode_nodes[,2], two_mode_nodes[,1]),]
rownames(two_mode_nodes) <- NULL
View(two_mode_nodes)
gross_genres <- aggregate(gross ~ genre, top20_gtg, sum)
View(gross_genres)
gross_genres <- aggregate(gross ~ ., top20_gtg[,2:3], sum)
gr <- top20_gtg[,2:3]
View(gr)
gross_genres <- aggregate(gross ~ ., gg, sum)
gross_genres <- aggregate(gross ~ ., gr, sum)
View(gr)
class(gr$gross)
gr$gross <- as.numeric(gr$gross)
gross_genres <- aggregate(gross ~ ., gr, sum)
View(gross_genres)
two_mode_nodes$gross <- gross_genres
2mnodes <- merge(two_mode_nodes, gross_genres, all=T)
zz <- merge(two_mode_nodes, gross_genres, all=T)
View(zz)
View(two_mode_nodes)
zz <- merge(two_mode_nodes, gross_genres[,2])
View(zz)
gross_genres[,2]
zz<-join(two_mode_nodes, gross_genres[,2], type="left")
zz<-join(two_mode_nodes, data.frame(gross_genres[,2]), type="left")
View(zz)
zz <- rbind(two_mode_nodes, gross_genres[,2])
View(zz)
zz <- cbind(two_mode_nodes, gross_genres[,2])
zz <- merge(two_mode_nodes, gross_genres[,2])
View(zz)
gg <- gross_genres[,2]
zz <- merge(two_mode_nodes, gg)
View(zz)
length(gg)
View(two_mode_nodes)
zz <- c(gross_genres, rep(NA, nrow(two_mode_nodes)-length(gross_genres)))
zz
two_mode_nodes$gross <- c(gross_genres, rep(NA, nrow(two_mode_nodes)-length(gross_genres)))
View(two_mode_nodes)
two_mode_nodes$gross <- c(gross_genres[,2], rep(NA, nrow(two_mode_nodes)-length(gross_genres)))
gross_genres[,2]
nrow(two_mode_nodes)-length(gross_genres)
two_mode_nodes$gross <- c(list(gross_genres[,2]), rep(NA, nrow(two_mode_nodes)-length(gross_genres)))
c(list(gross_genres[,2]), rep(NA, nrow(two_mode_nodes)-length(gross_genres)))
gr <- top20_gtg[,2:3]
gr$gross <- as.numeric(gr$gross)
gross_genres <- aggregate(gross ~ ., gr, sum)
two_mode_nodes$gross <- c(gross_genres, rep(NA, nrow(two_mode_nodes)-length(gross_genres)))
View(two_mode_nodes)
two_mode_nodes$gross <- c(gross_genres[,2], rep(NA, nrow(two_mode_nodes)-length(gross_genres)))
gross_genres[,2]
rep(NA, nrow(two_mode_nodes)-length(gross_genres)
)
c(gross_genres[,2], rep(NA, nrow(two_mode_nodes)-length(gross_genres)))
nrow(two_mode_nodes)-length(gross_genres)
nrow(two_mode_nodes)
length(gross_genres)
nrow(gross_genres)
two_mode_nodes$gross <- c(gross_genres[,2], rep(NA, nrow(two_mode_nodes)-nrow(gross_genres)))
View(two_mode_nodes)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
zz <- rescale(round(two_mode_nodes$gross/1000000,0),c(0.3, 2))
zz
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "red"), vertex.size=ifelse(V(net2)$size,"size", (2-V(net2)$type)*10), vertex.label.degree=pi/2,
layout=l[,c(2,1)])
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "red"), vertex.size=ifelse(V(net2)$type,"size", (2-V(net2)$type)*10), vertex.label.degree=pi/2,
layout=l[,c(2,1)])
two_mode_nodes <- unique(data.frame(id = c(as.matrix(top20_gtg[,1:2]))))
# add gross to two_mode_nodes
gr <- top20_gtg[,2:3]
gr$gross <- as.numeric(gr$gross)
gross_genres <- aggregate(gross ~ ., gr, sum)
two_mode_nodes$gross <- c(gross_genres[,2], rep(NA, nrow(two_mode_nodes)-nrow(gross_genres)))
two_mode_nodes$id <- as.character(two_mode_nodes$id)
genreList <- unique(genres_title_split$genre)
two_mode_nodes$type <- ifelse(two_mode_nodes[,1] %in%  genreList, 1, NA)
two_mode_nodes <- two_mode_nodes[ order(-two_mode_nodes[,2], two_mode_nodes[,1]),]
rownames(two_mode_nodes) <- NULL
View(two_mode_nodes)
two_mode_nodes <- unique(data.frame(id = c(as.matrix(top20_gtg[,1:2]))))
# add gross to two_mode_nodes
gr <- top20_gtg[,2:3]
gr$gross <- as.numeric(gr$gross)
gross_genres <- aggregate(gross ~ ., gr, sum)
two_mode_nodes$id <- as.character(two_mode_nodes$id)
genreList <- unique(genres_title_split$genre)
two_mode_nodes$type <- ifelse(two_mode_nodes[,1] %in%  genreList, 1, NA)
two_mode_nodes <- two_mode_nodes[ order(-two_mode_nodes[,2], two_mode_nodes[,1]),]
two_mode_nodes$gross <- c(gross_genres[,2], rep(NA, nrow(two_mode_nodes)-nrow(gross_genres)))
rownames(two_mode_nodes) <- NULL
View(two_mode_nodes)
tm_links <- top20_gtg[,c(2,1)]
#gglinks
gg_links <- cbind(tm_links, type=rep("genres", nrow(tm_links)))
m <- as.matrix(table(tm_links))
M <- m[, colnames(m) %in% unique(top20_gtg[,1])]
two_mode_links <- rbind(M)
net2 <- graph_from_incidence_matrix(two_mode_links)
table(V(net2)$type)
V(net2)$color <- c("steel blue", "orange")[V(net2)$type+1]
V(net2)$shape <- c("circle", "circle")[V(net2)$type+1]
# Genres will have name labels, movie nodes  will not:
V(net2)$label <- ""
V(net2)$label[V(net2)$type==F] <- two_mode_nodes$id[V(net2)$type==F]
V(net2)$label[V(net2)$type==T] <- two_mode_nodes$id[V(net2)$type==T]
V(net2)$label.cex=0.6
V(net2)$label.font=1.5
V(net2)$name <- two_mode_nodes$id
V(net2)$size <- rescale(round(two_mode_nodes$gross/1000000,0),c(0.3, 2))
l <- layout_with_kk(net2)
<- layout_in_circle(net2)
l <- layout_in_circle(net2)
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "blue"), vertex.size=ifelse(V(net2)$type,2-V(net2)$type)*10, "size", vertex.label.degree=pi/2,
layout=l[,c(2,1)])
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "blue"), vertex.size=ifelse(V(net2)$type,2-V(net2)$type)*10, V(net2)$size, vertex.label.degree=pi/2,
layout=l[,c(2,1)])
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "blue"), vertex.size=ifelse(V(net2)$type,2-V(net2)$type)*10, V(net2)$size), vertex.label.degree=pi/2,
layout=l[,c(2,1)])
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "blue"), vertex.size=ifelse(V(net2)$type,2-V(net2)$type*10, V(net2)$size), vertex.label.degree=pi/2,
layout=l[,c(2,1)])
plot(net2, vertex.label.color=ifelse(V(net2)$type,"black", "blue"), vertex.size=ifelse(V(net2)$type,10, V(net2)$size), vertex.label.degree=pi/2,
layout=l[,c(2,1)])
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
cols <- colorRampPalette(brewer.pal(6, "Paired"))(length(unique(catDat[1:50,])))
wordcloud::wordcloud(catDat[1:50,]$words, catDat[1:50,]$freq, color=cols,scale=c(1.7,0.2))
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
length(unique(catDat))
nrow(unique(catDat))
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
nrow(unique(catDat[1:50,]))
colorRampPalette(brewer.pal(12,"Set1"))(nrow(unique(catDat[1:50,])))
cols <- colorRampPalette(brewer.pal(9,"Set1"))(nrow(unique(catDat[1:50,])))
wordcloud::wordcloud(catDat[1:50,]$words, catDat[1:50,]$freq, colors = cols, scale=c(1.7,0.2))
cols <- colorRampPalette(brewer.pal(9,"Set1"))(nrow(unique(catDat)))
wordcloud::wordcloud(catDat$words, catDat$freq, colors = cols, scale=c(2.8,0.5))
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(nrow(unique(catDat)))
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
brewer.pal(12,"Paired")
colorRampPalette(brewer.pal(8,"Dark2"))(nrow(unique(catDat)))
print(colorRampPalette(brewer.pal(8,"Dark2"))(nrow(unique(catDat))))
display.colorRampPalette(brewer.pal(12,"Paired"))(nrow(unique(catDat)))
display.brewer.all(n=NULL, type="all", select=NULL, exact.n=TRUE)
display.brewer.pal(12,"Paired")
display.brewer.pal(50,"Paired")
display.brewer.pal(12,"Paired")
cols <- colorRampPalette(brewer.pal(12,"Paired"))(nrow(unique(catDat)))
cols <- colorRampPalette(brewer.pal(12,"Paired"))(nrow(unique(catDat)))
wordcloud::wordcloud(catDat[1:50,]$words, catDat[1:50,]$freq, colors = cols, scale=c(1.7,0.2))
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
set.seed(20)
sample(brewer.pal(12,"Paired"),50, replace = T)
sample(brewer.pal(12,"Paired"),50, replace = T)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
plot(rep(1,50),col=(colfunc(50)), pch=19,cex=2)
colfunc<-colorRampPalette(c("red","yellow","springgreen","royalblue"))
plot(rep(1,50),col=(colfunc(50)), pch=19,cex=2)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
print(sample(brewer.pal(12,"Paired"),50))
print(sample(brewer.pal(12,"Paired"),50),replace=T)
print(sample(brewer.pal(12,"Paired"),50,replace=T))
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
ratings <- c(1.5,9.5)
years <- c(1927,2016)
genre <- "All"
gross <- c(0, 700000000)
nodes_links <- getNL(ratings, years, genre, gross
)
runApp('Documents/COMP5703/Shiny/Project/MoviePVA')
